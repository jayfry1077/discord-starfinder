service: starfinder-discord-bot

frameworkVersion: "2"

provider:
  name: aws
  runtime: python3.8
  environment:
    STAGE: ${sls:stage}
  tags:
    application: starfinder

plugins:
  - serverless-python-requirements
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters

functions:
  invoke:
    handler: main.main
    events:
      - httpApi:
          method: POST
          path: /v1/invoke
    layers:
      - arn:aws:lambda:us-east-1:#{AWS::AccountId}:layer:salt:1
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - ssm:GetParameter
        Resource:
          - arn:aws:ssm:us-east-1:*:parameter/${sls:stage}/discord/starfinder/public/key
      - Effect: Allow
        Action:
          - events:PutEvents
        Resource:
          - !GetAtt starfinderEventBus.Arn
  lookup:
    handler: lookup.main

resources:
  Resources:
    starfinderEventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: discord-starfinder-${sls:stage}

    starfinderDiscoverer:
      Type: AWS::EventSchemas::Discoverer
      Properties:
        Description: Discovers starfinder eventbus events
        SourceArn: !GetAtt starfinderEventBus.Arn

    lookupEventRule:
      Type: AWS::Events::Rule
      Properties:
        Description: Forwards starfinder lookup events
        EventBusName: !Ref starfinderEventBus
        EventPattern:
          source:
            - discord.lookup
        State: ENABLED
        Targets:
          - Arn: !GetAtt LookupLambdaFunction.Arn
            Id: lookup

    LookupEventLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:invokeFunction
        FunctionName: !Ref LookupLambdaFunction
        Principal: events.amazonaws.com
        SourceArn: !GetAtt lookupEventRule.Arn
